name: Build and Release

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.version.outputs.version }}
    permissions:
      contents: write
    steps:
      - name: Get version
        id: version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "version=$(date +'%Y.%m.%d')-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: Release ${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: true

  build:
    needs: create-release
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          # Linux builds
          - os: ubuntu-latest
            platform: linux
            arch: x64
            output_name: flet_stress_test_linux_x64
#          - os: ubuntu-latest
#            platform: linux
#            arch: x32
#            output_name: flet_stress_test_linux_x32

          # Windows builds
          - os: windows-latest
            platform: windows
            arch: x64
            output_name: flet_stress_test_windows_x64.exe
#          - os: windows-latest
#            platform: windows
#            arch: x32
#            output_name: flet_stress_test_windows_x32.exe

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        architecture: ${{ matrix.arch }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install flet aiohttp fake-useragent

    - name: Create version file
      run: |
        echo "__version__ = '${{ needs.create-release.outputs.version }}'" > version.py

    - name: Build with PyInstaller (Linux)
      if: matrix.platform == 'linux'
      run: |
        pyinstaller --onefile --name ${{ matrix.output_name }} \
          --add-data "version.py:." \
          --hidden-import=flet \
          --hidden-import=aiohttp \
          --hidden-import=fake_useragent \
          main.py

    - name: Build with PyInstaller (Windows)
      if: matrix.platform == 'windows'
      run: |
        pyinstaller --onefile --name ${{ matrix.output_name }} `
          --add-data "version.py;." `
          --hidden-import=flet `
          --hidden-import=aiohttp `
          --hidden-import=fake_useragent `
          main.py

    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ./dist/${{ matrix.output_name }}*
        tag_name: ${{ needs.create-release.outputs.version }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.output_name }}
        path: ./dist/${{ matrix.output_name }}*

  build-android:
    needs: create-release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '11'

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer
        sudo apt-get update
        sudo apt-get install -y \
          python3-pip \
          build-essential \
          git \
          python3 \
          python3-dev \
          ffmpeg \
          libsdl2-dev \
          libsdl2-image-dev \
          libsdl2-mixer-dev \
          libsdl2-ttf-dev \
          libportmidi-dev \
          libswscale-dev \
          libavformat-dev \
          libavcodec-dev \
          zlib1g-dev \
          libgstreamer1.0 \
          gstreamer1.0-plugins-base \
          gstreamer1.0-plugins-good \
          cython3

    - name: Create buildozer.spec
      run: |
        cat > buildozer.spec << EOF
        [app]
        title = Flet Stress Test
        package.name = fletstresstest
        package.domain = org.test
        source.dir = .
        source.include_exts = py
        version = ${{ needs.create-release.outputs.version }}
        requirements = flet,aiohttp,fake-useragent
        orientation = portrait
        fullscreen = 0
        android.permissions = INTERNET
        android.arch = armeabi-v7a
        
        [buildozer]
        log_level = 2
        warn_on_root = 1
        EOF

    - name: Build Android APK
      run: |
        buildozer android debug

    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      with:
        files: bin/fletstresstest-*-debug.apk
        tag_name: ${{ needs.create-release.outputs.version }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: flet_stress_test_android.apk
        path: bin/fletstresstest-*-debug.apk
